# -----------------------------------------------------------------------------
# thumbai - Application Routes Configuration
#
# Refer documentation to explore and configure routes.
# Doc: https://docs.aahframework.org/routing.html
# -----------------------------------------------------------------------------

domains {
  #------------------------------------------------------------------------------
  # Domain/subdomain Key Name
  # Choose a `unique keyname` to define domain section and its configuration.
  # Tip: domain name address, port no values could be used to create a 
  # meaningful domain key, etc.
  #
  # Doc: https://docs.aahframework.org/routes-config.html#domain-configuration
  #------------------------------------------------------------------------------
  thumbai {
    name = "thumbai routes"
    host = "localhost"
    port = ""
    anti_csrf_check = true
    default_auth = "form_auth"
    catch_all {
      controller = "RequestController"
      action = "Handle"
      auth = "anonymous"
      anti_csrf_check = false
    }
      

    #------------------------------------------------------------------------------
    # Static files Routes Configuration
    # To serve static files, it can be directory or individual file.
    # This section optional one, for e.g: RESTful APIs doesn't need this section.
    # Static files are delivered via `http.ServeContent`.
    #
    # Supported features:
    #   - Serve directory
    #   - Serve individual file
    #   - Directory listing
    #
    # Choose an `unique name` for each `directory` or `individual` file
    # static route definition. It is called `route name`.
    #
    # Doc: https://docs.aahframework.org/routes-config.html#section-static
    #------------------------------------------------------------------------------
    static {
      public_assets {
        path = "/thumbai/assets"
        dir = "static"
      }
      robots_txt {
        path = "/thumbai/robots.txt"
        file = "robots.txt"
      }
    }    

    # -----------------------------------------------------------------------------
    # Routes Configuration
    #
    # Doc: https://docs.aahframework.org/routes-config.html#routes-configuration
    # -----------------------------------------------------------------------------
    routes {
      gomod {
        path = "/repo/*modPath"
        controller = "GoModController"
        action = "Handle"
        auth = "anonymous"
      }

      admin {
        path = "/thumbai"
        controller = "admin/DashboardController"
        action = "ToAdminDashboard"
        routes {
          health_check {
            path = "/health"
            controller = "RequestController"
            action = "Health"
            auth = "anonymous"
          }
          dashboard {
            path = "/dashboard"
          }
          credits {
            path = "credits"
            action = "Credits"
            auth = "anonymous"
          }
          login {
            path = "/login"
            controller = "admin/UserController"
            action = "Login"
            auth = "anonymous"
          }
          logout {
            path = "/logout"
            method = "post"
            controller = "admin/UserController"
            action = "Logout"
          }          
          gomod_admin {
            path = "/gomodules"
            controller = "admin/GoModController"
          }
          vanity_list {
            path = "/vanities"
            controller = "admin/VanityController"
            action = "List"
          }
          vanity_show {
            path = "/vanities/:hostName/show"
            controller = "admin/VanityController"
            action = "Show"
          }
          proxy_list {
            path = "/proxies"
            controller = "admin/ProxyController"
            action = "List"
          }
          proxy_show {
            path = "/proxies/:hostName/show"
            controller = "admin/ProxyController"
            action = "Show"
          }
          proxy_add {
            path = "/proxies/:hostName/add"
            controller = "admin/ProxyController"
            action = "AddRulePage"
          }
          proxy_edit {
            path = "/proxies/:hostName/edit/:targetURL"
            controller = "admin/ProxyController"
            action = "EditRulePage"
          }
          tools_index {
            path = "tools"
            controller = "admin/ToolsController"
          }
          tools_config_export {
            path = "tools/config-export"
            controller = "admin/ToolsController"
            action = "Export"
          }
          tools_config_import {
            path = "tools/config-import"
            method = "post"
            controller = "admin/ToolsController"
            action = "Import"
          }
        }  
      }

      admin_api_v1 {
        path = "/thumbai/api/v1"
        anti_csrf_check = true
        routes {
          gomod_save_settings {
            path = "/gomodules"
            method = "post"
            controller = "admin/GoModController"
            action = "SaveSettings"
            routes {
              gomod_publish {
                path = "/publish"
                method = "post"
                action = "Publish"
              }
            }
          }           

          vanity_hosts {
            path = "/vanities"
            controller = "admin/VanityController"
            action = "Hosts"
            routes {
              vanity_add_host {
                method = "post"
                action = "AddHost"
              }
              vanity_get_host {
                path = "/:hostName"
                action = "Host"
              }              
              vanity_del_host {
                path = "/:hostName"
                method = "delete"
                action = "DelHost"
              }
              vanity_add_package {
                path = "/:hostName/packages"
                method = "post"
                action = "AddVanityPackage"
              }
              vanity_del_package {
                path = "/:hostName/packages/:pkg"
                method = "delete"
                action = "DelVanityPackage"
              }
            }
          } # group end - vanity_hosts

          proxy_hosts {
            path = "/proxies"
            controller = "admin/ProxyController"
            action = "Hosts"
            routes {
              proxy_add_host {
                method = "post"
                action = "AddHost"                
              }
              proxy_get_host {
                path = "/:hostName"
                action = "Host"
                routes {
                  proxy_del_host {
                    method = "delete"
                    action = "DelHost"
                  }
                  proxy_edit_target_url {
                    path = "/rules"
                    method = "put"
                    action = "EditTargetURL"
                    routes {
                      proxy_edit_conditions {
                        path = "/:targetURL/conditions"
                        method = "put"
                        action = "EditConditions"
                      }
                      proxy_edit_redirects {
                        path = "/:targetURL/redirects"
                        method = "put"
                        action = "EditRedirects"
                      }
                      proxy_edit_restricts {
                        path = "/:targetURL/restricts"
                        method = "put"
                        action = "EditRestricts"
                      }
                      proxy_edit_statics {
                        path = "/:targetURL/statics"
                        method = "put"
                        action = "EditStatics"
                      }
                      proxy_edit_req_hdrs {
                        path = "/:targetURL/request-headers"
                        method = "put"
                        action = "EditRequestHeaders"
                      }
                      proxy_edit_res_hdrs {
                        path = "/:targetURL/response-headers"
                        method = "put"
                        action = "EditResponseHeaders"
                      }
                      proxy_rule_del {
                        path = "/:targetURL"
                        method = "delete"
                        action = "DelProxyRule"
                      }
                    }
                  } # group end - proxy_edit_target_url
                }
              } # group end - proxy_get_host
            }
          } # group end - proxy_hosts
        }
      } # end - admin_api_v1

    } # end - routes

  } # end - thumbai

} # end - domains
